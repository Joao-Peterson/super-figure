name: cicd

on:
  push:
    branches: [master]
    # only on v.x.x.x versions 
    tags: [ "v.**" ]
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Clone repo"
        uses: "actions/checkout@v3"

      - name: "Setup node"
        uses: "actions/setup-node@v3"
        with:
          node-version: 16

      - name: "Build"
        run: "yarn install"

      - name: "Package"
        run: yarn vsce package -o "super-figure.vsix"

      - name: Save package artifact
        uses: "actions/upload-artifact@v3"
        with:
          name: "super-figure.vsix"
          path: "super-figure.vsix"

      - run: ls -la 
      - run: find *.vsix
  
  deploy-vscode-markplace:
    runs-on: ubuntu-latest
    steps:
      - name: "Clone repo"
        uses: "actions/checkout@v3"

      - name: Install vsce
        run: yarn global add @vscode/vsce

      - name: "Get package artifact"
        uses: "actions/download-artifact@v3"
        with:
          name: "super-figure.vsix"
          path: .

      - run: ls -la 
      - run: ls -la "super-figure.vsix"
      # https://code.visualstudio.com/api/working-with-extensions/publishing-extension
      - name: "Publish package to Vscode Marketplace"
        env:
          VSC_PAT: ${{ secrets.VSC_PAT }}
        run: vsce publish -p "$VSC_PAT" -i "super-figure.vsix"

      # # https://github.com/eclipse/openvsx/wiki/Publishing-Extensions#1-create-an-access-token 
      # - name: "Publish package to OpenVSX Registry"
      #   env:
      #     OVSX_PAT: ${{ secrets.OVSX_PAT }}
      #   run: yarn ovsx publish -p "$OVSX_PAT" 


  # release:
  #   needs: [ build ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: "Get package artifact"
  #       uses: "actions/download-artifact@v3"
  #       with:
  #         name: "super-figure.vsix"

  #     - name: "Gitea release"
  #       uses: "https://github.com/ncipollo/release-action@v1"
  #       with:
  #         name: ${{ needs.build.outputs.packagename }}
  #         artifacts: "super-figure.vsix"